# -*- coding: utf-8 -*-
"""Problem_Sheet_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VzJ6w-ySUzwLCBFlD99rHFRV7uD57JIq
"""

# Newton Divided Difference along with plot

from sympy import *
z = Symbol('z')
import matplotlib.pyplot as plt
import numpy as np

n = 5

x = [45,50,55,60,65]
y = [114.84,96.16,83.32,74.48,68.48]

y1 = y

ploy_list = []
ploy_list.append(y[0])

c = 0

print('The Difference Table is:')
def Difference_Table():
    global c,n,y
    diff_list = []
    for i in range(n-1):
        diff_list.append((y[i+1] - y[i])/(x[c+i+1] - x[i]))
    y = diff_list
    ploy_list.append(y[0])
    print(y)
    c = c + 1
    n = n - 1

for i in range(n-1):
    Difference_Table()

print(f'Polynomial List: {ploy_list}')

def p(z):
    p1 = []
    p1.append(1)
    for j in range(len(ploy_list)):
        if j > 0:
            s = 1
            for i in range(j):
                s = s * (z - x[i])
                p1.append(s)
    p2 = []
    for i in range(len(ploy_list)):
        p2.append(ploy_list[i] * p1[i])
    f = sum(p2)
    return f

def p1(z2):
    p1 = []
    p1.append(1)
    for j in range(len(ploy_list)):
        if j > 0:
            s = 1
            for i in range(j):
                s = s * (z2 - x[i])
                p1.append(s)
    p2 = []
    for i in range(len(ploy_list)):
        p2.append(ploy_list[i] * p1[i])
    f = sum(p2)
    return f

z2 = np.linspace(45,65,1000)
plt.plot(z2,p1(z2))
plt.scatter(x,y1)

print(p(z))
v1 = 46
print(p(z).subs(z,v1))

v2 = 63
print(p(z).subs(z,v2))