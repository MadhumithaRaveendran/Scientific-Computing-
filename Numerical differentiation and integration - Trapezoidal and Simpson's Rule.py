# -*- coding: utf-8 -*-
"""Problem_Sheet_6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pJzgJGneSihH0KNxNRt4H-R5iy4zy25Z
"""

# Trapezoidal Rule, Simpson's 1/3 and 3/8 rule

from sympy import *
z = Symbol('z')
import math

a = -2
b = 2
n = 100
h = (b - a)/n

#f = log(z) incase of log function
#f = exp(-1 * (z**2))  incase of exp function
#f = (z**2)/(1 + (z**3)) in case of polynomial
f = log(z)

#f = (exp(cos(z)))/(z**2 + z + 1)
f = exp((-1*z)/2)/((z**2) + 1)

x = []
y = []

h1 = a
while h1 <= b:
  x.append(round(h1,2))
  y.append(round(f.subs(z,h1),2))
  h1 = h1 + h
  h1 = round(h1,2)

print(f'x = {x}')
print(f'y = {y}')


def Trapezoidal():
  t1 = y[0] + y[n]
  t2 = 0
  for j in range(1,n):
    t2 = t2 + y[j]
  t3 = (h/2) * (t1 + (2 * t2))
  return round(t3,4)

def Simpson1():
  t1 = y[0] + y[n]
  t2 = 0
  t3 = 0
  for j in range(1,n):
    if (j % 2) == 0:
      t2 = t2 + y[j]
    else:
      t3 = t3 + y[j]
  t4 = (h/3) * ( t1 + (4 * t3) + (2 * t2))
  return round(t4,4)

def Simpson2():
  t1 = y[0] + y[n]
  t2 = 0
  t3 = 0
  for j in range(1,n):
    if (j % 3) == 0:
      t2 = t2 + y[j]
    else:
      t3 = t3 + y[j]
  t4 = ((3*h)/8)*(t1 + (3*t3) + (2*t2))
  return round(t4,4)

print(Trapezoidal())
print(Simpson1())
print(Simpson2())

print(round(integrate(f,(z,0,1)),4))